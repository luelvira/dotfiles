#+TITLE: i3 configuration file
#+AUTHOR: Lucas Elvira Martín
#+DATE: [2023-11-26 Sun]
#+PROPERTY: header-args :tangle config
#+auto_tangle: t 
* Table of Content                                                      :TOC:
- [[#i3-config][I3 CONFIG]]
- [[#setup-mod-key][Setup mod key]]
- [[#theme][Theme]]
  - [[#fonts-and-title][Fonts and title]]
  - [[#gaps][Gaps]]
  - [[#borders-and-colors][Borders and colors]]
- [[#setting-hotkeys][Setting hotkeys]]
  - [[#rofi][Rofi]]
  - [[#reloadrestart-i3][Reload/restart i3]]
  - [[#navigate-between-layouts][Navigate between layouts]]
  - [[#move-container-to-another-workspace][Move container to another workspace]]
  - [[#change-between-modes][Change between modes]]
  - [[#moving-arround-the-windows][Moving arround the windows]]
  - [[#windows-manager-tools][Windows Manager tools]]
  - [[#launch-custom-programs][Launch Custom programs]]
- [[#setup-workspace][Setup workspace]]
  - [[#define-layout][Define layout]]
  - [[#i3-bar][I3 bar]]
  - [[#polybar][Polybar]]
  - [[#binding-workspace-to-monitors][Binding workspace to monitors]]
  - [[#run-programs-on-startup][Run programs on startup]]

* I3 CONFIG

The file used to build this one has been auto-generated by i3-config-wizard(1).

If you want to auto-generate this file run:

#+begin_example sh
i3-config-wizard
#+end_example

Please see <https://i3wm.org/docs/userguide.html> for a complete reference!

* Setup mod key

Set mod key to windows key and setup rofi variable

#+begin_src sh
set $mod Mod4
set $rofi ~/.config/rofi/scripts/launch.sh
#+end_src

* Theme
** Fonts and title

Font for window titles. Will also be used by the bar unless a different
font is used in the bar {} block below.

#+begin_src sh
font pango:Noto Sans 0
for_window [class   = ".*"] title_format "%class"
title_align center
#+end_src

** Gaps
#+begin_src sh
smart_gaps on
gaps inner 10px
gaps outer 2px
#+end_src

** Borders and colors

#+begin_src sh
default_border pixel 1
# class                 border  bground text    indicator child_border
client.focused          #343746 #5e637f #F8F8F2 #343746
client.focused_inactive #343746 #343746 #F8F8F2 #21222C   #21222C
client.unfocused        #343746 #343746 #F8F8F2 #21222C   #21222C
client.background       #FFFFFF
#+end_src

* Setting hotkeys

** Rofi

Rofi is a popup window switcher like dmenu (the default used in d3) . Rofi will
provide user with a textual list of options where the user could select almost
one.

Here are some custom shortcut used with rofi


| Shortcut     | Command      | Description                                          |
|--------------+--------------+------------------------------------------------------|
| $mod+d       | rofi appmenu | Launch the app menu from rofi                        |
| $mod+Shift+d | tabmenu      | Open menu that allows to change between open windows |
| $mod+Shift+e | powermenu    | Power related options                                |
| $mod+t       | run          | Run a command line                                   |

#+begin_src sh
bindsym $mod+d exec --no-startup-id $rofi appmenu
bindsym $mod+Shift+d exec --no-startup-id $rofi tabmenu
bindsym $mod+Shift+e exec --no-startup-id $rofi powermenu 
bindsym $mod+t exec --no-startup-id $rofi run 
#+end_src

** Reload/restart i3

Something needed when you are customize the WM is to be enable of reload the
configuration quickly. So, you can do it with 

| Shortcut         | Command | Description                                                      |
|------------------+---------+------------------------------------------------------------------|
| $mod + Shift + c | reload  | Reload the config of i3                                          |
| $mod + Shift + r | Restart | Restart i3, like you logout and login, without close any program |
|------------------+---------+------------------------------------------------------------------|

#+begin_src sh
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
#+end_src

** Navigate between layouts

To change between worksapce use ~$mod+N~, where N is the name of the worksapce
#+begin_src sh
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
#+end_src

** Move container to another workspace

To move container to another WS use ~$mode+Shift+N~, where N is the  name of the WS.
#+begin_src sh
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#+end_src

*** Start XDG autostart .desktop files using dex. See also

See: <https://wiki.archlinux.org/index.php/XDG_Autostart>

#+begin_src sh
exec --no-startup-id dex-autostart --autostart --environment i3
#+end_src

*** Setup some programs to control de WM

The combination of xss-lock, nm-applet and pactl is a popular choice, so
they are included here as an example. Modify as you see fit.

xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock
the screen before suspend. Use loginctl lock-session to lock your
screen.

#+begin_src sh
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
#+end_src
NetworkManager is the most popular way to manage wireless networks on
Linux, and nm-applet is a desktop environment-independent system tray
GUI for it.

#+begin_src sh
exec --no-startup-id nm-applet
#+end_src

** Change between modes

i3 modes are a way of arrange the windows. There are 5 basic modes:

1.  Tilling mode
2.  Stack Mode
3.  Tab mode
4.  Floatting mode
5.  Resize

Use Mouse+\$mod to drag floating windows to their wanted position

#+begin_src sh
floating_modifier $mod
#+end_src

Commands to change the layout

#+begin_src sh
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
#+end_src

*** Resize mode

This is some shorcuts to change size of windows. You can also use the mouse

#+begin_src sh
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"
#+end_src

** Moving arround the windows

There are some key binding to navigate arrount the current layout

#+begin_src sh
# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# kill focused window
bindsym $mod+Shift+q kill
#+end_src



** Windows Manager tools

***  Use pactl to adjust volume in PulseAudio.

#+begin_src sh
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#+end_src

***  Allow to make screenshoots

#+begin_src sh
bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/$(date +'%Y-%m-%d %H-%M-%S').png" && notify-send "Picture save in ~/Pictures/$(date +'%Y-%m-%d %H-%M-%S').png"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/$(date +'%Y-%m-%d %H-%M-%S').png" && notify-send "Picture save in ~/Pictures/$(date +'%Y-%m-%d %H-%M-%S').png"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/$(date +'%Y-%m-%d %H-%M-%S').png" && notify-send "Picture save in ~/Pictures/$(date +'%Y-%m-%d %H-%M-%S').png"
## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png
#+end_src

** Launch Custom programs
| action                     | shortcuts    |
|----------------------------+--------------|
| launch terminal            | $mod+return  |
| Launch firefox             | $mod+shift+b |
| Launch telegram            | $mod+shift+t |
| Connect headphones         | $mod+F1      |
| Change keyboard layout     | alt+shift    |
| Connect UC3M vpn           | $mod+F2      |
| open wiki.vim home         | $mod+alt+w   |
| open wiki.vim journal home | $mod+alt+j   |
|----------------------------+--------------|

#+begin_src sh
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Shift+b exec --no-startup-id firefox
bindsym $mod+Shift+t exec --no-startup-id telegram-desktop

exec_always "setxkbmap -option 'grp:alt_shift_toggle' -layout us,es"
bindsym $mod+F1 exec  --no-startup-id ~/.local/bin/bluetooth.sh

#+end_src

* Setup workspace

Workspace are like virtual desktop in other window manager or desktop
environment. On each workspace you can have any program, also you cand
bind some program to always be openend in one of it

** Define layout

In this block we define names for the default layout and store it in
variables to avoid repeating the names in multiple places

#+begin_src sh
set $ws1    "1: "
set $ws2    "2: "
set $ws3    "3:"
set $ws4    "4:"
set $ws5    "5:"
set $ws6    "6:"
set $ws7    "7:"
set $ws8    "8:"
set $ws9    "9:"
set $ws10   "10:"
set $ws11   scratchpad
#+end_src

*** Send programs to custom WS

Most of the programs can be referenced by its class and sent to custom
workspace. In this case, I will set firefox on ws2, spotify on ws3 and
message service on 4

#+begin_src sh
assign [class="firefox"] $ws2
assign [class="TelegramDesktop"] $ws4
assign [class="slack"] $ws4
assign [class="obsidian"] $ws5
#+end_src

There are also programs that don\'t follow this rule, so it is necessary
another method

#+begin_src sh
for_window [class="Spotify"] move to workspace $ws3
#+end_src

** I3 bar                                                       :DEPRECATED:

Start i3bar to display a workspace bar (plus the system information
i3status In the future, it will be replace to i3blocks or polybar

``` i3config
# finds out, if available)
bar {
  colors {
    background #000000
    statusline #FFFFFF
    separator  #666666

    focused_workspace  #83CAFA #51A2DA #FFFFFF
    active_workspace   #3C6EB4 #294172 #FFFFFF
    inactive_workspace #8C8C8C #4C4C4C #888888
    urgent_workspace   #EC69A0 #DB3279 #FFFFFF
    binding_mode       #b691d3 #A07CBC #FFFFFF
  }
  status_command i3status
}
```

** Polybar

Launch polybar on each restart. The configuration file is [[file:../polybar/config.org][polybar.org]]

#+begin_src sh
exec_always --no-startup-id /home/lucas/.config/polybar/launch.sh
#+end_src
** Binding workspace to monitors

#+begin_src sh
workspace $ws1 output DP-1
workspace $ws3 output DP-1
workspace $ws5 output DP-1
workspace $ws7 output DP-1
workspace $ws9 output DP-1
workspace $ws2 output HDMI-0
workspace $ws4 output HDMI-0
workspace $ws6 output HDMI-0
workspace $ws8 output HDMI-0
workspace $ws10 output HDMI-0
#+end_src

** Run programs on startup

Run some command on login. With *exec~always~* the command will be
execute always that the config file is reload. If you only want that it
will be execute once use *exec*

1.  Set background image
2.  launch picom
3.  Run xrand
4.  Run Redshift
5.  Launch always duns

#+begin_src sh
exec --no-startup-id feh --bg-fill /home/lucas/Pictures/wallpapers/OsfFKJ0.jpg
exec --no-startup-id picom -b -f --experimental-backends
exec --no-startup-id xrandr --output HDMI-0 --auto --right-of DP-1
exec --no-startup-id redshift -l 40.59:-3.712
exec --no-startup-id i3-sensible-terminal
exec_always --no-startup-id dunst -config ~/.config/dunst/dunstrc
exec --no-startup-id dex ~/.config/autostart/emacs-server.desktop
#+end_src
