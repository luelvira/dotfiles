#+TITLE: Org Mode Workflow
#+PROPERTY: header-args :tangle ./lisp/org-zettel.el

* Zettelkasten methodology

The zettelkasten methodology  offers a set of rules to help you to organize your notes in a
way that makes them easy to find. It is based on the idea of establishing links
between atomic concepts (each note). On this way, breaks the traditional
hierarchical structure based on folders and makes it easier to relate concepts 

There are 4 kind of notes:
**  1. Fleeting notes

Fleeting notes are thinkings, ideas, concepts and sketch of future notes. They
need to be processed and related with another notes. To make it simple, the
name of this  notes has a prefix with the current date and time, so can be many
notes with the same "title". This method make easy not be distracted by the
title instead of the concept.

#+begin_src emacs-lisp
    (add-to-list 'org-roam-capture-templates
                 '("f" "Fleeting" plain "%?"
                  :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+TITLE: ${title}\n#+DATE: %U\n#+AUTHOR: %n\n#+filetags: fleeting")
             :unnarrowed nil))
#+end_src


**  2. Literature Notes

Literature notes are notes extracted from external source. These must include
the reference. These notes have summary or/and highlight from the source, and if
it is possible, tray to indicate:

1. Why this content is relevant?
2. When you read the source?
3. In which content do you think it can be useful?

To answer this question, you can use meta-data as header from of the note, a
link to the project/area which you think that can be useful and a link to
another note with the explanation. This allows you to keep separate the original
content to your conclusion and ideas.

#+begin_src emacs-lisp
      (setq bibliography-files '("~/Documents/Org/bibliography.bib"))
      (use-package ivy-bibtex
        :config
        (setq bibtex-completion-bibliography bibliography-files))


    (use-package org-ref
      :ensure nil
      :init (require 'bibtex)
      (setq bibtex-autokey-year-length 4 bibtex-autokey-name-year-separator
            "-" bibtex-autokey-year-title-separator "-"
            bibtex-autokey-titleword-separator "-" bibtex-autokey-titlewords
            2 bibtex-autokey-titlewords-stretch 1 bibtex-autokey-titleword-length 5)
      (define-key bibtex-mode-map (kbd "H-b") 'org-ref-bibtex-hydra/body)
      (define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link)
      (define-key org-mode-map (kbd "s-[") 'org-ref-insert-link-hydra/body)
      (require 'org-ref-ivy)
      (require 'org-ref-arxiv)
      (require 'org-ref-scopus)
      (require 'org-ref-wos))


    (use-package org-ref-ivy
      :ensure nil
      :init (setq org-ref-insert-link-function 'org-ref-insert-link-hydra/body
                  org-ref-insert-cite-function 'org-ref-cite-insert-ivy
                  org-ref-insert-label-function 'org-ref-insert-label-link
                  org-ref-insert-ref-function 'org-ref-insert-ref-link
                  org-ref-cite-onclick-function (lambda (_)
                    (org-ref-citation-hydra/body))))
#+end_src
*** Citar

[[https://github.com/emacs-citar/citar][Citar]] provides a highly-configurable completing-read front-end to browse and act
on BibTeX, BibLaTeX, and CSL JSON bibliographic data, and LaTeX, markdown, and
org-cite editing support.

#+begin_src emacs-lisp
  (use-package citar
    :config
    (citar-register-notes-source 'orb-citar-source
                             (list :name "Org-Roam Notes"
                                   :category 'org-roam-node
                                   :items #'citar-org-roam--get-candidates
                                   :hasitems #'citar-org-roam-has-notes
                                   :open #'citar-org-roam-open-note
                                   :create #'orb-citar-edit-note
                                   :annotate #'citar-org-roam--annotate))

    (setq citar-notes-source 'orb-citar-source)
    :custom
    (citar-bibliography '("~/Documents/Org/bibliography.bib")))
#+end_src
*** citar-org-roam

This package use citar as base to improve the citation process.

#+begin_src emacs-lisp
(use-package org-roam-bibtex :after org-roam)
(use-package citar-org-roam
  :after (citar org-roam)
  :config (citar-org-roam-mode))
#+end_src


#+begin_src emacs-lisp
  (setq citar-org-roam-note-title-template "${author} - ${title}")
  (add-to-list 'org-roam-capture-templates
               '("r" "bibliography reference" plain "%?"
                 :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+TITLE: ${title}\n#+AUTHOR: %n\n#+filetags: Literature\n#+cite-key: ${citekey}\n#+cite-date: ${citedate} \n#+created: %U\n#+last_modified: %U\n\n")
                 :unnarrowed t))
  (setq citar-org-roam-capture-template-key "r")
#+end_src

**  3. Permanent notes

Permanent notes are stand-alone ideas, that can be made without any direct
context to other sourced. Can be made as a recap or summary of the information,
but also can be thoughts that popped into your brain while you are working.

The aim of permanent notes is to process the notes you have made and extract
ideas, related content and any kind of useful information for you.


**  4. Index Notes

Index notes are these notes used to group connected notes. Can be a TOC, a sort
description, or whatever you want. 


* EOF

#+begin_src emacs-lisp
(provide 'org-zettel)
#+end_src
